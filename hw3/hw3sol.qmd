---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 23 @ 11:59PM"
author: "Jenny Nguyen, UID: 805947763"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
execute:
  eval: true    
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup}
library(arrow)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://mimic.mit.edu/docs/iv/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2024winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10013310 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

**Answer:**
```{r}
#define subject id
sid <- 10013310

#read in and manipulate data files 
transfers_10013310 <- read_csv("~/mimic/hosp/transfers.csv.gz") |>
  filter(subject_id == sid) 
patients_10013310 <- read_csv("~/mimic/hosp/patients.csv.gz") |>
  filter(subject_id == sid)
admissions_10013310 <- read_csv("~/mimic/hosp/admissions.csv.gz") |>
  filter(subject_id == sid) |>
  slice_head()
labevents_10013310 <- arrow::open_dataset("labevents_pq/part-0.parquet", 
                                          format = "parquet") |> 
  filter(subject_id == sid) |>
  as_tibble()
d_icd_procedures_tble <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
procedures_icd_10013310 <- read_csv("~/mimic/hosp/procedures_icd.csv.gz") |>
  filter(subject_id == sid) |>
  mutate(chartdate = as.POSIXct(chartdate, format="%Y-%m-%d")) |>
  left_join(d_icd_procedures_tble, by = c("icd_code", "icd_version"))
d_icd_diagnoses_tble <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")
diagnoses_icd_10013310 <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz") |>
  filter(subject_id == sid) |>
  left_join(d_icd_diagnoses_tble, by = c("icd_code", "icd_version")) |>
  group_by(hadm_id) |>
  arrange(seq_num, .by_group = TRUE) |>
  ungroup() |>
  slice(1:3)

#define title and subtitle
my_title <- paste(c("Patient", sid, ",", print(patients_10013310$gender), ",", 
                  print(patients_10013310$anchor_age), ",", 
                  print(admissions_10013310$race)), collapse = " ")
my_subtitle <- paste(print(diagnoses_icd_10013310$long_title), collapse = "\n")

#plot graph
ggplot() +
  geom_segment(data = transfers_10013310,
               mapping = aes(
                 x = intime, xend = outtime, 
                 y = 0.025, yend = 0.025, 
                 color = careunit),
               linewidth = ifelse(grepl("ICU|CCU", transfers_10013310$careunit), 
                             6, 2)) +
  geom_point(data = labevents_10013310,
             mapping = aes(x = charttime, y = 0),
             shape = 3) +
  geom_point(data = procedures_icd_10013310,
             mapping = aes(x = chartdate, y = -0.025, shape = long_title)) +
  scale_shape_manual(values = c(15, 16, 17, 3, 6, 7, 8, 10, 13)) +
  labs(title = my_title,
       subtitle = my_subtitle,
       x = "Calendar Time",
       y = " ") +
  theme_bw() + 
  theme(legend.position = "bottom",
        aspect.ratio = 1/4) +
  scale_y_continuous(breaks = c(-0.025, 0, 0.025),
                     labels = c("Procedure", "Lab", "ADT")) +
  coord_cartesian(ylim = c(-0.04, 0.04))
```

### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

Do a similar visualization for the patient `10013310`.

**Answer:**
```{r}
#read in data files
chartevents_10013310 <- arrow::open_dataset("chartevents_pq/part-0.parquet", 
                                            format = "parquet") |>
  filter(subject_id == sid) |>
  as_tibble()
icustays_10013310 <- read_csv("~/mimic/icu/icustays.csv.gz") |>
  filter(subject_id == sid) |>
  left_join(chartevents_10013310, 
            by = c("subject_id", "hadm_id", "stay_id"), 
            relationship = "many-to-many") |>
  filter(itemid == 220045 | itemid == 220179 | itemid == 220180 | 
           itemid == 223761 | itemid == 220210)

#define title and labels 
my_title2 <- paste(c("Patient", sid, "ICU stays - Vitals"), collapse = " ")
ylabels <- c("220045" = "HR",
             "220179" = "NBPs",
             "220180" = "NBPd",
             "220210" = "RR",
             "223761" = "Temperature F")

#plot graph
ggplot(data = icustays_10013310,
       mapping = aes(x = charttime, y = valuenum, color = factor(itemid))) +
  geom_line(show.legend = FALSE) + 
  geom_point(show.legend = FALSE) +
  facet_grid(itemid ~ stay_id,
             scales = "free",
             labeller = labeller(itemid = as_labeller(ylabels))) +
  labs(title = my_title2) +
  theme_light() + 
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_x_datetime(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(n.breaks = 4)
```

## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 

```{r}
icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz") |>
  print()
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs. 

```{r}
icustays_tble |>
  distinct(subject_id) |>
  summarize(rows = n())
```
There are 50,920 unique `subject_id`. 

```{r}
icustays_tble |>
  summarize(rows = n())
```
Without specifying unique values for `subject_id`, there are 73,181 total rows, which is more than the 50,920 rows from specifying unique values for `subject_id`. Thus, a `subject_id` can have multiple ICU stays. 

```{r}
icustays_count <- icustays_tble |>
  group_by(subject_id) |>
  summarize(
    count = n()
  ) 

ggplot(data = icustays_count) +
  geom_jitter(mapping = aes(x = subject_id, y = count)) + 
  labs(
    title = "Distribution of ICU stays by patient", 
    x = "Patient's Subject ID",
    y = "Count"
  )
```
A majority of the patients have 10 or less ICU stays. Some patients have between 10-20 ICU stays, and a select few have 20+ ICU stays. 

## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.

**Answer:**
```{r}
admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz") |>
  print()
```

### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  

**Answer:**
```{r}
admissions_count <- admissions_tble |>
  group_by(subject_id) |>
  summarize(
    count = n()
  ) 

ggplot(data = admissions_count) +
  geom_jitter(mapping = aes(x = subject_id, y = count)) + 
  labs(
    title = "Distribution of admissions by patient", 
    x = "Patient's Subject ID",
    y = "Count"
  )
```
A majority of the patients have 50 or less admissions. Some patients have between 50-100 admissions, and a select few have 100+ admissions. 

- admission hour (anything unusual?)  

**Answer:**
```{r}
ggplot(data = admissions_tble) +
  geom_bar(mapping = aes(x = hour(admittime))) + 
  labs(
    title = "Distribution of the hour of admission", 
    x = "Hour of Admission",
    y = "Count"
  ) 
```
Yes, there is an unusually high number of admissions that occur at 0am and 7am, relative to the other hours in the morning. Aside from these two unusual hours, admissions are generally low in the morning; however, admissions start to increase in the early afternoon and stay at high numbers during the night. 

- admission minute (anything unusual?)  

**Answer:**
```{r}
ggplot(data = admissions_tble) +
  geom_bar(mapping = aes(x = minute(admittime))) + 
  labs(
    title = "Distribution of the minute of admission", 
    x = "Minute of Admission",
    y = "Count"
  ) 
```
Yes, there is an unusually high number of admissions that occur at the 0 minute, 15 minute, 30 minute, and 45 minute. This could be due a tendency of healthcare workers to round to the nearest quarter of the hour when recording the admission time. Aside from these unusual minutes, all other minutes have similar numbers of admissions. 

- length of hospital stay (from admission to discharge) (anything unusual?)  

**Answer:**
```{r}
ggplot(data = admissions_tble) +
  geom_bar(mapping = aes(x = (as.duration(admittime %--% dischtime)/86400))) + 
  labs(
    title = "Distribution of hospital stay length", 
    x = "Hospital Stay Length (Days)",
    y = "Count"
  ) 
```
Yes, the x axis of the graph extends to 300 days, indicating that there is an unusually long hospital stay that lasted around 300 days. Most hospital stays are relatively short, spanning a day to a few days. However, there do seem to be some hospital stays that are longer, spanning several days to weeks.  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patient’s age at their first admission has been fixed to 300.

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.

**Answer:**
```{r}
patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz") |>
  print()
```

### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

**Answer:**
```{r}
ggplot(data = patients_tble) +
  geom_violin(mapping = aes(x = gender, y = anchor_age)) + 
  labs(
    title = "Distribution of patient age by patient gender", 
    x = "Gender",
    y = "Age"
  ) 

ggplot(data = patients_tble) +
  geom_histogram(binwidth = 2, mapping = aes(x = anchor_age, fill = gender),
                 position = "dodge") + 
  labs(
    title = "Distribution of patient age by patient gender",
    x = "Age",
    y = "Count",
    fill = "Gender"
  ) 
```
In general, there is a larger share of young adult patients compared to adult and elderly patients, for both genders. This observation is surprising, as we would assume the opposite with more elderly patients and less young adult patients. However, the oldest elderly patients seem to make up a sizable share of the total patients, likely due to worsening health conditions. Across young adult and elderly patients, there is a larger share of female patients, while across adult patients, there is a larger share of male patients. This could be due to multiple factors or a combination of factors, e.g. women may be more likely to seek out medical care or come in more often for female-specific health conditions that are critical at younger and older ages. 

## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

**Answer:**
```{r}
labevents_subset <- arrow::open_dataset("labevents_pq/part-0.parquet", 
                                      format = "parquet") |>
  select(subject_id, itemid, storetime, valuenum) |>
  filter(itemid == 50912 | itemid == 50971 | itemid == 50983 | itemid == 50902 |
           itemid == 50882 | itemid == 51221 | itemid == 51301 | 
           itemid == 50931) |>
  as_tibble()
icustays_subset <- icustays_tble |> 
  select(subject_id, stay_id, intime)
labevents_tble <- left_join(icustays_subset, labevents_subset, 
                            by = "subject_id", 
                            relationship = "many-to-many") |>
  mutate(span = as.duration(storetime - intime)) |> 
  group_by(subject_id, stay_id, itemid) |>
  arrange(span, .by_group = TRUE) |>
  filter(span < 0) |>
  slice_tail() |>
  select(-c(intime, storetime, span)) |>
  pivot_wider(names_from = itemid, values_from = valuenum) |>
  rename(
    creatinine = "50912",
    potassium = "50971",
    sodium = "50983",
    chloride = "50902",
    bicarbonate = "50882",
    hematocrit = "51221",
    wbc = "51301",
    glucose = "50931"
  ) |>
  ungroup() |>
  print()
```

## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patient’s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.

**Answer:**
```{r}
chartevents_subset <- arrow::open_dataset("chartevents_pq/part-0.parquet", 
                                      format = "parquet") |>
  select(subject_id, stay_id, charttime, itemid, valuenum) |>
  filter(itemid == 220045 | itemid == 220179 | itemid == 220180 | 
           itemid == 223761 | itemid == 220210) |>
  as_tibble()
icustays_subset <- icustays_tble |> 
  select(subject_id, stay_id, intime)
chartevents_tble <- left_join(chartevents_subset, icustays_subset, 
                                  by = c("subject_id", "stay_id"), 
                                  relationship = "many-to-many") |> 
  mutate(span = as.duration(charttime - intime)) |>
  group_by(subject_id, stay_id, itemid) |>
  arrange(span, .by_group = TRUE) |>
  slice_head() |> 
  select(-c(intime, charttime, span)) |>
  pivot_wider(names_from = itemid, values_from = valuenum) |>
  rename(
    heart_rate = "220045",
    non_invasive_blood_pressure_systolic = "220179",
    non_invasive_blood_pressure_diastolic = "220180",
    temperature_fahrenheit = "223761",
    respiratory_rate = "220210"
  ) |> 
  ungroup() |>
  print()
#row 6, respiratory rate has diff value from photo
```

## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)

**Answer:**
```{r}
mimic_icu_cohort <- left_join(icustays_tble, admissions_tble, 
                              by = c("subject_id", "hadm_id")) |>
  left_join(patients_tble, by = "subject_id") |>
  left_join(labevents_tble, by = c("subject_id", "stay_id")) |>
  left_join(chartevents_tble, by = c("subject_id", "stay_id")) |>
  mutate(intime_year = year(intime),
         year_diff = intime_year - anchor_year,
         intime_age = anchor_age + year_diff) |>
  filter(intime_age >= 18) |>
  select(-c(intime_year, year_diff)) |>
  print()
```
Above is my final `mimic_icu_cohort`. The number of rows in my cohort (73,181) does not exactly match the number of rows in the picture (73,097), which is because I filtered the age at intime by >= 18 as the instructions requested. However, when I tested out filtering the age at intime by > 18, the number of rows was 73,097, which matched the picture. I kept the filter as age at intime >= 18 to comply with the instructions. 

## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

**Answer:**

::: {.panel-tabset}

#### Race

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_col(mapping = aes(x = race, y = los)) + 
  labs(
    title = "Distribution of ICU stay length by patient race", 
    x = "Race",
    y = "Total ICU Stay Length (Fractional Days)"
  ) + 
  coord_flip() 
```
White patients have the longest total ICU stay, followed by patients with an unknown race and Black/African American patients. 

#### Insurance

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_col(mapping = aes(x = insurance, y = los)) + 
  labs(
    title = "Distribution of ICU stay length by patient's insurance", 
    x = "Insurance",
    y = "Total ICU Stay Length (Fractional Days)"
  ) +
  coord_flip()
```
Patients with insurance other than Medicare and Medicaid have the longest total ICU stay, closely followed by patients with Medicare insurance. Compared to patients with Medicare or other insurance, patients with Medicaid have a shorter total ICU stay.  

#### Marital Status

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_col(mapping = aes(x = marital_status, y = los)) + 
  labs(
    title = "Distribution of ICU stay length by patient's marital status", 
    x = "Marital Status",
    y = "Total ICU Stay Length (Fractional Days)"
  ) + 
  coord_flip()
```
Married patients have the longest total ICU stay, followed by single patients. Compared to married or single patients, widowed and divorced patients as well as patients with missing marital status data have shorter total ICU stays.  

#### Gender

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_col(mapping = aes(x = gender, y = los)) + 
  labs(
    title = "Distribution of ICU stay length by patient gender", 
    x = "Gender",
    y = "Total ICU Stay Length (Fractional Days)"
  ) + 
  coord_flip()
```
Male patients have a longer total ICU stay, compared to female patients. 

#### Age

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = intime_age, y = los), 
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by patient age", 
    caption = "Patient age at time of transfer to ICU.",
    x = "Age",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Across all ages, most ICU stays tend to be 30 days or less, though there are some patients with ICU stays longer than 30 days. Generally, the youngest and oldest patients tend to have shorter ICU stays, while a larger share of adults aged 50-90 years tend to have longer ICU stays. 

:::

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

**Answer:**

::: {.panel-tabset}

#### Bicarbonate

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = bicarbonate, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by bicarbonate measurement",
    x = "Bicarbonate (mEq/L)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with bicarbonate levels between ~20-30 mEq/L measured right before their ICU stay tend to have longer ICU stays, while patients with very low or very high bicarbonate levels tend to have shorter ICU stays. 

#### Chloride

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = chloride, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by chloride measurement",
    x = "Chloride (mEq/L)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with chloride levels ~100 mEq/L tend to have the longest ICU stays, while patients with very low or very high chloride levels tend to have shorter ICU stays. 

#### Creatinine

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = creatinine, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by creatinine measurement",
    x = "Creatinine (mg/dL)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with very low creatinine levels tend to have longer ICU stays, while patients with higher creatinine levels tend to have shorter ICU stays. 

#### Glucose

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = glucose, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by glucose measurement",
    x = "Glucose (mg/dL)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with low glucose levels tend to have longer ICU stays, while patients with higher glucose levels tend to have shorter ICU stays. 

#### Potassium

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = potassium, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by potassium measurement",
    x = "Potassium (mEq/L)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with potassium levels between ~3-6 mEq/L tend to have longer ICU stays, while patients with very low or very high potassium levels tend to have shorter ICU stays. 

#### Sodium

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = sodium, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by sodium measurement",
    x = "Sodium (mEq/L)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with sodium levels between ~125-150 mEq/L tend to have longer ICU stays, while patients with lower and higher sodium levels tend to have shorter ICU stays. 

#### Hematocrit

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = hematocrit, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by hematocrit measurement",
    x = "Hematocrit (%)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with hematocrit levels between ~25-45% tend to longer ICU stays, while patients with lower and higher hematocrit levels tend to have shorter ICU stays. 

#### White Blood Cell

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = wbc, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by white blood cell count",
    x = "White Blood Cell Count",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with very low white blood cell counts tend to have longer ICU stays, while patients with higher white blood cell counts tend to have shorter ICU stays. 

:::

- Length of ICU stay `los` vs the average vital measurements within the first hour of ICU stay

**Answer:**

::: {.panel-tabset}

#### Heart Rate

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = heart_rate, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by heart rate measurement",
    x = "Heart Rate (bpm)",
    y = "ICU Stay Length (Fractional Days)"
  )

ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = heart_rate, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by heart rate measurement",
    x = "Heart Rate (bpm)",
    y = "ICU Stay Length (Fractional Days)"
  ) + 
  coord_cartesian(xlim = c(0, 250))
```
The first plot shows one observation with an extremely high heart rate (possibly due to a recording error?), which masks the variability in the distribution. The second plot ignores this observation, zooming into the distribution of heart rates between 0-250 bpm. In the second plot, we can see that patients with heart rates between ~75-125 bpm tend to have longer ICU stays, compared to patients with lower or higher heart rates. 

#### Systolic Non-invasive Blood Pressure

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = non_invasive_blood_pressure_systolic, 
                           y = los)) +
  labs(
    title = "Distribution of ICU stay length by systolic non-invasive blood pressure measurement",
    x = "Systolic Non-invasive Blood Pressure (mmHg)",
    y = "ICU Stay Length (Fractional Days)"
  ) 

ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = non_invasive_blood_pressure_systolic, 
                           y = los)) +
  labs(
    title = "Distribution of ICU stay length by systolic non-invasive blood pressure measurement",
    x = "Systolic Non-invasive Blood Pressure (mmHg)",
    y = "ICU Stay Length (Fractional Days)"
  ) + 
  coord_cartesian(xlim = c(0, 275))
```
The first plot shows two observation with extremely high systolic non-invasive blood pressures (possibly due to recording errors?), which masks the variability in the distribution. The second plot ignores these observations, zooming into the distribution of systolic non-invasive blood pressures between 0-275 mmHg. In the second plot, we can see that patients with systolic non-invasive blood pressures between ~100-150 mmHg tend to have longer ICU stays, compared to patients with lower or higher blood pressures.  

#### Diastolic Non-invasive Blood Pressure

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = non_invasive_blood_pressure_diastolic, 
                           y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by diastolic non-invasive blood pressure measurement",
    x = "Diastolic Non-invasive Blood Pressure (mmHg)",
    y = "ICU Stay Length (Fractional Days)"
  ) 

ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = non_invasive_blood_pressure_diastolic, 
                           y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by diastolic non-invasive blood pressure measurement",
    x = "Diastolic Non-invasive Blood Pressure (mmHg)",
    y = "ICU Stay Length (Fractional Days)"
  ) + 
  coord_cartesian(xlim = c(0, 225))
```
The first plot shows several observations with extremely high diastolic non-invasive blood pressures (possibly due to recording errors?), which masks the variability in the distribution. The second plot ignores these observation, zooming into the distribution of diastolic non-invasive blood pressures between 0-225 mmHg. In the second plot, we can see that patients with diastolic non-invasive blood pressures between ~50-100 mmHg tend to have longer ICU stays, compared to patients with lower or higher blood pressures. 

#### Respiratory Rate

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = respiratory_rate, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by respiratory rate measurement",
    x = "Respiratory Rate (insp/min)",
    y = "ICU Stay Length (Fractional Days)"
  ) 
```
Patients with respiratory rates ~25 insp/min tend to have longer ICU stays, while patients with lower or higher respiratory rates tend to have shorter ICU stays. 

#### Body Temperature

```{r}
ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = temperature_fahrenheit, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by body temperature measurement",
    x = "Body Temperature (degrees Fahrenheit)",
    y = "ICU Stay Length (Fractional Days)"
  ) 

ggplot(data = mimic_icu_cohort) +
  geom_point(mapping = aes(x = temperature_fahrenheit, y = los),
             position = "jitter") +
  labs(
    title = "Distribution of ICU stay length by body temperature measurement",
    x = "Body Temperature (degrees Fahrenheit)",
    y = "ICU Stay Length (Fractional Days)"
  ) + 
  coord_cartesian(xlim = c(0, 105))
```
The first plot shows two observations with extremely high body temperatures (possibly due to recording errors?), which masks the variability in the distribution. The second plot ignores these observation, zooming into the distribution of diastolic non-invasive blood pressures between 0-105 degrees Fahrenheit. In the second plot, we can see that most observations are clustered around the average human body temperature, with the longest ICU stays observed for patients with body temperatures slightly below 100 degrees Fahrenheit. Unusually, there are observations with extremely low body temperatures as well. 

:::

- Length of ICU stay `los` vs first ICU unit

**Answer:**
```{r}
ggplot(data = mimic_icu_cohort) +
  geom_col(mapping = aes(x = first_careunit, y = los)) + 
  labs(
    title = "Distribution of ICU stay length by first ICU unit", 
    x = "First ICU Unit",
    y = "Total ICU Stay Length (Fractional Days)"
  ) + 
  coord_flip()
```
Patients transferred to the Medical Intensive Care Unit (MICU) have the longest total ICU stay, followed by patients transferred to the Surgical Intensive Care Unit (SICU) and the Medical/Surgical Intensive Care Unit (MICU/SICU). Patients transferred to Neuro Stepdown have the shortest total ICU stay. 
